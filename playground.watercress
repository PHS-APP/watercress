/*
playground for seeing how language syntax will feel
*/

// line comment
/*
block comment
*/

import/use * from std

const X: int = 2
global Y: int = 3

// ERROR, double import + imports must come before all declarations
import/use * from std

/*
ffunc (foreign function) C (from C) malloc (function name)

ffuncs can only be called from dfuncs
*/
ffunc C malloc(size: int): rawptr
    return malloc(size)
end

// ERROR, globals and consts MUST be declared before all other declaration types
global Z: int = 0

ffunc C free(ptr: rawptr): void
    free(ptr)
end

dfunc to_cstr(s: str): rawptr
    sp: rawptr = malloc(fmtstr.len() + 1)
    for (i: int = 0, i < fmtstr.len(); i ++)
        sp[i] = fmtstr[i]
    end
    return sp
end

ffunc C printf(fmtstr: rawptr, args: VA): void
    printf()
end

dfunc println(fmtstr: str, args: VA): void
    printf(to_cstr(fmtstr+'\n'), args)
end

dfunc foo(baz: str): void
    println("%s", baz)
end

func bar(x: int): int
    return x+1
end

/*
would cause error as it attempts to access a global state
*/
func boo(delta: int): void
    Y += delta
end

mfunc main(args: str[]): int
    println("%d", bar(2))
    foo("Hello, world!")
    return 0
end
